{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pagers/About.js","components/pagers/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","color","float","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","prototype","PropTypes","string","isRequired","onchange","func","AddContact","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","EditContact","updContact","match","params","put","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.687a181f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts : state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n\r\n        case 'ADD_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts : [action.payload, ...state.contacts]\r\n        };\r\n\r\n        case 'UPDATE_CONTACT':\r\n        return{\r\n            ...state,\r\n            contacts : state.contacts.map(contact => //return the set to update contact obj\r\n                contact.id === action.payload.id ? (\r\n                    contact = action.payload\r\n                ):contact)\r\n        };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n\r\n    //this is our globel state\r\n    state = {\r\n        contacts : [\r\n            \r\n        ],\r\n\r\n        dispatch : action => {\r\n          this.setState(state => reducer(state,action))\r\n        }\r\n    }\r\n\r\n    // componentDidMount(){\r\n    //     axios.get('https://jsonplaceholder.typicode.com/users')\r\n    //         .then(res => this.setState({\r\n    //             contacts : res.data\r\n    //         }));\r\n    // }\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts:res.data})\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value = {this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from  '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo : false\r\n  }\r\n\r\n  onShowClick = (e) => {\r\n    this.setState({\r\n      showContactInfo : !this.state.showContactInfo\r\n    });\r\n  }\r\n\r\n  // onDeleteClick = (id, dispatch) =>{\r\n  //   axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  //     .then(res => dispatch({type : 'DELETE_CONTACT', payload : id}));\r\n  // }\r\n\r\n  onDeleteClick = async (id, dispatch) =>{\r\n   // const res = await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({type : 'DELETE_CONTACT', payload : id})\r\n  }\r\n    \r\n  render() {\r\n    const {id,name, email, phone} = this.props.contact;\r\n    const {showContactInfo} = this.state;\r\n    return (\r\n\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name} <i className=\"fas fa-sort-down\" style={{cursor:'pointer'}} onClick={this.onShowClick}></i>\r\n              <i className=\"fas fa-times\" style={{cursor:'pointer', color:'red', float:'right'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n              \r\n              <Link to={`contact/edit/${id}`}>\r\n              <i className=\"fas fa-pencil-alt\" style={{cursor:'pointer', color:'black', float:'right', marginRight:'1rem'}}></i>\r\n              </Link>\r\n              </h4>\r\n              {showContactInfo ? (<ul className =\"list-group\">\r\n                  <li className=\"list-group-item\">Email : {email}</li>\r\n                  <li className=\"list-group-item\">Phone : {phone}</li>\r\n              </ul>) : null} \r\n         \r\n          </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact : PropTypes.object.isRequired,\r\n    \r\n   \r\n\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n    \r\n    \r\n  render() {\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <>\r\n            <h1 className=\"display-4 my-3\"><span className=\"text-danger\">Contact </span>List</h1>\r\n            {\r\n                contacts.map(contact => \r\n                <Contact \r\n                key={contact.id}\r\n                contact ={contact}\r\n                />\r\n                )\r\n            }\r\n          </>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const {branding} = props;\r\n  return (\r\n    <nav className=\"nav-bar navbar-expand-sm  navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container clearfix\">\r\n        <div className=\"float-left\">\r\n          <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        </div>\r\n        \r\n        <div className=\"float-right\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>{' '}Home</Link>\r\n            </li> \r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>{' '}Add</Link>\r\n            </li> \r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i>{' '}About</Link>\r\n            </li>      \r\n          </ul>\r\n        </div>\r\n        \r\n      </div>\r\n      \r\n    </nav>\r\n  )\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding : 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name, \r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={label}>{label}</label>\r\n      <input type={type} \r\n      name={name}\r\n      className={classnames('form-control',{'is-invalid':error})} //default class name & class name with condition\r\n      placeholder={placeholder}\r\n      value = {value}\r\n      onChange = {onChange}\r\n      />\r\n\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.prototype = {\r\n  name : PropTypes.string.isRequired,\r\n  placeholder : PropTypes.string.isRequired,\r\n  label : PropTypes.string.isRequired,\r\n  value : PropTypes.string.isRequired,\r\n  type : PropTypes.string.isRequired,\r\n  onchange : PropTypes.func.isRequired,\r\n  error : PropTypes.string.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type : 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n  state = {\r\n    name :'',\r\n    email : '',\r\n    phone : '',\r\n    error : {}\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    //check for error\r\n    if(name === ''){\r\n      this.setState({\r\n        error : {name : 'Name is reqiured'}\r\n      });\r\n      return;\r\n    }\r\n    if(email === ''){\r\n      this.setState({\r\n        error : {email : 'Email is reqiured'}\r\n      });\r\n      return;\r\n    }\r\n    if(phone === ''){\r\n      this.setState({\r\n        error : {phone : 'phone is reqiured'}\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      \r\n      name, //name : name\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n    dispatch({ type : 'ADD_CONTACT', payload : res.data})\r\n\r\n    //clear state\r\n    this.setState({\r\n      name : '',\r\n      email : '',\r\n      phone : '',\r\n      error :{}\r\n    });\r\n\r\n    //redirect to home page\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const {name, email,phone, error} = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form action=\"\" onSubmit = {this.onSubmit.bind(this, dispatch)}>\r\n                  \r\n                  <TextInputGroup \r\n                  label=\"Name\" \r\n                  name=\"name\" \r\n                  placeholder=\"Enter Name...\"\r\n                  value = {name}\r\n                  onChange = {this.onChange}\r\n                  error = {error.name}\r\n                  />\r\n\r\n                  <TextInputGroup \r\n                  label=\"Email\" \r\n                  name=\"email\" \r\n                  type = \"email\"\r\n                  placeholder=\"Enter Email...\"\r\n                  value = {email}\r\n                  onChange = {this.onChange}\r\n                  error = {error.email}\r\n                  />\r\n\r\n                  <TextInputGroup \r\n                  label=\"Phone\" \r\n                  name=\"phone\" \r\n                  placeholder=\"Enter Phone...\"\r\n                  value = {phone}\r\n                  onChange = {this.onChange}\r\n                  error = {error.phone}\r\n                  />\r\n      \r\n                  \r\n      \r\n                  \r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-primary\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to Manage to manage</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Fount</h1>\r\n      <p className=\"lead\">Sorry , that page does not exists</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n  state = {\r\n    title : '',\r\n    body :''\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then(response => response.json())\r\n    .then(data => this.setState({\r\n      title : data.title,\r\n      body : data.body\r\n    }))\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //   console.log('test component will mounted');\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //   console.log('test component updated'); //like state update after\r\n  // }\r\n\r\n  // componentWillUpdate(){\r\n  //   console.log('test component will updated'); //before state update \r\n  // }\r\n\r\n  render() {\r\n    const {title, body} = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Test;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n  state = {\r\n    name :'',\r\n    email : '',\r\n    phone : '',\r\n    error : {}\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name:contact.name,\r\n      email:contact.email,\r\n      phone:contact.phone\r\n    })\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name] : e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    //check for error\r\n    if(name === ''){\r\n      this.setState({\r\n        error : {name : 'Name is reqiured'}\r\n      });\r\n      return;\r\n    }\r\n    if(email === ''){\r\n      this.setState({\r\n        error : {email : 'Email is reqiured'}\r\n      });\r\n      return;\r\n    }\r\n    if(phone === ''){\r\n      this.setState({\r\n        error : {phone : 'phone is reqiured'}\r\n      });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      // name : name,\r\n      // email :email,\r\n      // phone : phone\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n   //send request\r\n   const {id} = this.props.match.params;\r\n\r\n   const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n   dispatch({type:'UPDATE_CONTACT', payload:res.data});\r\n\r\n    //clear state\r\n    this.setState({\r\n      name : '',\r\n      email : '',\r\n      phone : '',\r\n      error :{}\r\n    });\r\n\r\n    //redirect to home page\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const {name, email,phone, error} = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form action=\"\" onSubmit = {this.onSubmit.bind(this, dispatch)}>\r\n                  \r\n                  <TextInputGroup \r\n                  label=\"Name\" \r\n                  name=\"name\" \r\n                  placeholder=\"Enter Name...\"\r\n                  value = {name}\r\n                  onChange = {this.onChange}\r\n                  error = {error.name}\r\n                  />\r\n\r\n                  <TextInputGroup \r\n                  label=\"Email\" \r\n                  name=\"email\" \r\n                  type = \"email\"\r\n                  placeholder=\"Enter Email...\"\r\n                  value = {email}\r\n                  onChange = {this.onChange}\r\n                  error = {error.email}\r\n                  />\r\n\r\n                  <TextInputGroup \r\n                  label=\"Phone\" \r\n                  name=\"phone\" \r\n                  placeholder=\"Enter Phone...\"\r\n                  value = {phone}\r\n                  onChange = {this.onChange}\r\n                  error = {error.phone}\r\n                  />\r\n      \r\n                  \r\n      \r\n                  \r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-primary\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n    \r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport {Provider} from './context';\nimport AddContact from './components/contacts/AddContact';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport About from './components/pagers/About';\nimport NotFound from './components/pagers/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"/>\n          <div className=\"container\">\n\n          <Switch>\n            <Route exact path=\"/\" component={Contacts}/>\n            <Route exact path=\"/contact/add\" component={AddContact}/>\n            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n            <Route exact path=\"/about\" component={About}/>\n            <Route exact path=\"/test\" component={Test}/>\n            <Route component={NotFound}/>\n          </Switch>\n        \n            \n          </div>\n\n        </div>\n\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}